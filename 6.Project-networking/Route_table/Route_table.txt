# To create a route table.
az network route-table create \
    --name publictable \
    --resource-group rg-test-rt \
    --disable-bgp-route-propagation false

# To create a custom route.

az network route-table route create \
    --route-table-name publictable \
    --resource-group rg-test-rt \
    --name productionsubnet \
    --address-prefix 10.0.1.0/24 \
    --next-hop-type VirtualAppliance \
    --next-hop-ip-address 10.0.2.4

# To Create a virtual network and subnets.
az network vnet create \
        --name vnet \
        --resource-group rg-test-rt \
        --address-prefixes 10.0.0.0/16 \
        --subnet-name publicsubnet \
        --subnet-prefixes 10.0.0.0/24

az network vnet subnet create \
        --name privatesubnet \
        --vnet-name vnet \
        --resource-group rg-test-rt \
        --address-prefixes 10.0.1.0/24

az network vnet subnet create \
        --name dmzsubnet \
        --vnet-name vnet \
        --resource-group rg-test-rt \
        --address-prefixes 10.0.2.0/24

az network vnet subnet list \
        --resource-group rg-test-rt \
        --vnet-name vnet \
        --output table

# To Associate the route table with the public subnet.

az network vnet subnet update \
        --name publicsubnet \
        --vnet-name vnet \
        --resource-group rg-test-rt \
        --route-table publictable


--------------------------------x----------------------------------------x-----------------------------------------

Exercise - Create an NVA and virtual machines
Completed
100 XP
10 minutes
This module requires a sandbox to complete. A sandbox gives you access to free resources. Your personal subscription will not be charged. The sandbox may only be used to complete training on Microsoft Learn. Use for any other reason is prohibited, and may result in permanent loss of access to the sandbox.
Microsoft provides this lab experience and related content for educational purposes. All presented information is owned by Microsoft and intended solely for learning about the covered products and services in this Microsoft Learn module.

In the next stage of your security implementation, you'll deploy a network virtual appliance (NVA) to secure and monitor traffic between your front-end public servers and internal private servers.

You'll configure the appliance to forward IP traffic. If IP forwarding isn't enabled, traffic that is routed through your appliance will never be received by its intended destination servers.

In this exercise, you'll deploy the nva network appliance to the dmzsubnet subnet. Then you'll enable IP forwarding so that traffic from publicsubnet and traffic that uses the custom route is sent to the privatesubnet subnet.

Network virtual appliance with IP forwarding enabled.

In the following steps, you'll deploy an NVA. You'll then update the Azure virtual NIC and the network settings within the appliance to enable IP forwarding.

Deploy the network virtual appliance
To build the NVA, deploy an Ubuntu LTS instance.

In Cloud Shell, run the following command to deploy the appliance. Replace <password> with a suitable password of your choice for the azureuser admin account.

Azure CLI


az vm create \
    --resource-group rg-test-rt \
    --name nva \
    --vnet-name vnet \
    --subnet dmzsubnet \
    --image UbuntuLTS \
    --admin-username azureuser \
    --admin-password @Password12345
Enable IP forwarding for the Azure network interface
In the next steps, IP forwarding for the nva network appliance is enabled. When traffic flows to the NVA but is meant for another target, the NVA will route that traffic to its correct destination.

Run the following command to get the ID of the NVA network interface.

Azure CLI


NICID=$(az vm nic list \
    --resource-group rg-test-rt \
    --vm-name nva \
    --query "[].{id:id}" --output tsv)

echo $NICID
Run the following command to get the name of the NVA network interface.

Azure CLI


NICNAME=$(az vm nic show \
    --resource-group rg-test-rt \
    --vm-name nva \
    --nic $NICID \
    --query "{name:name}" --output tsv)

echo $NICNAME
Run the following command to enable IP forwarding for the network interface.

Azure CLI


az network nic update --name $NICNAME \
    --resource-group rg-test-rt \
    --ip-forwarding true
Enable IP forwarding in the appliance
Run the following command to save the public IP address of the NVA virtual machine to the variable NVAIP.

Azure CLI


NVAIP="$(az vm list-ip-addresses \
    --resource-group rg-test-rt \
    --name nva \
    --query "[].virtualMachine.network.publicIpAddresses[*].ipAddress" \
    --output tsv)"

echo $NVAIP
Run the following command to enable IP forwarding within the NVA.

Bash


ssh -t -o StrictHostKeyChecking=no azureuser@$NVAIP 'sudo sysctl -w net.ipv4.ip_forward=1; exit;'
When prompted, enter the password you used when you created the virtual machine.

---------------------------------------------------------------------------------------------------------------------------

Exercise - Route traffic through the NVA
Completed
100 XP
10 minutes
This module requires a sandbox to complete. A sandbox gives you access to free resources. Your personal subscription will not be charged. The sandbox may only be used to complete training on Microsoft Learn. Use for any other reason is prohibited, and may result in permanent loss of access to the sandbox.
Microsoft provides this lab experience and related content for educational purposes. All presented information is owned by Microsoft and intended solely for learning about the covered products and services in this Microsoft Learn module.

Now that you've created the network virtual appliance (NVA) and virtual machines (VMs), you'll route the traffic through the NVA.

Virtual machines and IP addresses.

Create public and private virtual machines
The next steps deploy a VM into the public and private subnets.

Open the Cloud Shell editor and create a file named cloud-init.txt.

Bash


code cloud-init.txt
Add the following configuration information to the file. With this configuration, the inetutils-traceroute package is installed when you create a new VM. This package contains the traceroute utility that you'll use later in this exercise.

Text


#cloud-config
package_upgrade: true
packages:
   - inetutils-traceroute
Press Ctrl+S to save the file, and then press Ctrl+Q to close the editor.

In Cloud Shell, run the following command to create the public VM. Replace <password> with a suitable password for the azureuser account.

Azure CLI


az vm create \
    --resource-group rg-test-rt \
    --name public \
    --vnet-name vnet \
    --subnet publicsubnet \
    --image UbuntuLTS \
    --admin-username azureuser \
    --no-wait \
    --custom-data cloud-init.txt \
    --admin-password <password>
Run the following command to create the private VM. Replace <password> with a suitable password.

Azure CLI


az vm create \
    --resource-group rg-test-rt \
    --name private \
    --vnet-name vnet \
    --subnet privatesubnet \
    --image UbuntuLTS \
    --admin-username azureuser \
    --no-wait \
    --custom-data cloud-init.txt \
    --admin-password <password>
Run the following Linux watch command to check that the VMs are running. The watch command periodically runs the az vm list command so that you can monitor the progress of the VMs.

Bash


watch -d -n 5 "az vm list \
    --resource-group rg-test-rt \
    --show-details \
    --query '[*].{Name:name, ProvisioningState:provisioningState, PowerState:powerState}' \
    --output table"
A ProvisioningState value of "Succeeded" and a PowerState value of "VM running" indicate a successful deployment. When all three VMs are running, you're ready to move on. Press Ctrl-C to stop the command and continue with the exercise.

Run the following command to save the public IP address of the public VM to a variable named PUBLICIP.

Azure CLI


PUBLICIP="$(az vm list-ip-addresses \
    --resource-group rg-test-rt \
    --name public \
    --query "[].virtualMachine.network.publicIpAddresses[*].ipAddress" \
    --output tsv)"

echo $PUBLICIP
Run the following command to save the public IP address of the private VM to a variable named PRIVATEIP.

Azure CLI


PRIVATEIP="$(az vm list-ip-addresses \
    --resource-group rg-test-rt \
    --name private \
    --query "[].virtualMachine.network.publicIpAddresses[*].ipAddress" \
    --output tsv)"

echo $PRIVATEIP
Test traffic routing through the network virtual appliance
The final steps use the Linux traceroute utility to show how traffic is routed. You'll use the ssh command to run traceroute on each VM. The first test will show the route taken by ICMP packets sent from the public VM to the private VM. The second test will show the route taken by ICMP packets sent from the private VM to the public VM.

Run the following command to trace the route from public to private. When prompted, enter the password for the azureuser account that you specified earlier.

Bash


ssh -t -o StrictHostKeyChecking=no azureuser@$PUBLICIP 'traceroute private --type=icmp; exit'
If you receive the error message bash: traceroute: command not found, wait a minute and retry the command. The automated installation of traceroute can take a minute or two after VM deployment. After the command succeeds, the output should look similar to the following example:

Text


traceroute to private.kzffavtrkpeulburui2lgywxwg.gx.internal.cloudapp.net (10.0.1.4), 64 hops max
1   10.0.2.4  0.710ms  0.410ms  0.536ms
2   10.0.1.4  0.966ms  0.981ms  1.268ms
Connection to 52.165.151.216 closed.
Notice that the first hop is to 10.0.2.4. This address is the private IP address of nva. The second hop is to 10.0.1.4, the address of private. In the first exercise, you added this route to the route table and linked the table to the publicsubnet subnet. So now all traffic from public to private is routed through the NVA.

Route from public to private.

Run the following command to trace the route from private to public. When prompted, enter the password for the azureuser account.

Bash


ssh -t -o StrictHostKeyChecking=no azureuser@$PRIVATEIP 'traceroute public --type=icmp; exit'
You should see the traffic go directly to public (10.0.0.4) and not through the NVA, as shown in the following command output.

Text


traceroute to public.kzffavtrkpeulburui2lgywxwg.gx.internal.cloudapp.net (10.0.0.4), 64 hops max
1   10.0.0.4  1.095ms  1.610ms  0.812ms
Connection to 52.173.21.188 closed.
The private VM is using default routes, and traffic is routed directly between the subnets.

Route from private to public.

You've now configured routing between subnets to direct traffic from the public internet through the dmzsubnet subnet before it reaches the private subnet. In the dmzsubnet subnet, you added a VM that acts as an NVA. You can configure this NVA to detect potentially malicious requests and block them before they reach their intended targets.

--------------------------------------------------------------------------------------------------------
-------------------X---------------------X-----------------------X-----------------X---------------------

Tutorial: Route network traffic with a route table using the Azure portal

Overview
Prerequisites
Sign in to Azure
Create a virtual network
Show 9 more
Azure routes traffic between all subnets within a virtual network, by default. You can create your own routes to override Azure's default routing. Custom routes are helpful when, for example, you want to route traffic between subnets through a network virtual appliance (NVA).

In this tutorial, you learn how to:

Create a virtual network and subnets
Create an NVA that routes traffic
Deploy virtual machines (VMs) into different subnets
Create a route table
Create a route
Associate a route table to a subnet
Route traffic from one subnet to another through an NVA
This tutorial uses the Azure portal. You can also complete it using the Azure CLI or PowerShell.

If you don't have an Azure subscription, create a free account before you begin.

Overview
This diagram shows the resources created in this tutorial along with the expected network routes.

Diagram showing an overview of interaction of the Public, Private and N V A Virtual Machines used in this tutorial.

Prerequisites
An Azure subscription
Sign in to Azure
Sign in to the Azure portal.

Create a virtual network
In this section, you'll create a virtual network, three subnets, and a bastion host. You'll use the bastion host to securely connect to the virtual machines.

From the Azure portal menu, select + Create a resource > Networking > Virtual network, or search for Virtual Network in the portal search box.

Select Create.

On the Basics tab of Create virtual network, enter or select this information:

Setting	Value
Subscription	Select your subscription.
Resource group	Select Create new, enter myResourceGroup.
Select OK.
Name	Enter myVirtualNetwork.
Region	Select East US.
Select the IP Addresses tab, or select the Next: IP Addresses button at the bottom of the page.

In IPv4 address space, select the existing address space and change it to 10.0.0.0/16.

Select + Add subnet, then enter Public for Subnet name and 10.0.0.0/24 for Subnet address range.

Select Add.

Select + Add subnet, then enter Private for Subnet name and 10.0.1.0/24 for Subnet address range.

Select Add.

Select + Add subnet, then enter DMZ for Subnet name and 10.0.2.0/24 for Subnet address range.

Select Add.

Select the Security tab, or select the Next: Security button at the bottom of the page.

Under BastionHost, select Enable. Enter this information:

Setting	Value
Bastion name	Enter myBastionHost.
AzureBastionSubnet address space	Enter 10.0.3.0/24.
Public IP Address	Select Create new.
Enter myBastionIP for Name.
Select OK.
 Note

Hourly pricing starts from the moment Bastion is deployed, regardless of outbound data usage. For more information, see Pricing and SKUs. If you're deploying Bastion as part of a tutorial or test, we recommend that you delete this resource once you've finished using it.

Select the Review + create tab or select the Review + create button.

Select Create.

Create an NVA virtual machine
Network virtual appliances (NVAs) are virtual machines that help with network functions, such as routing and firewall optimization. In this section, you'll create an NVA using a Windows Server 2019 Datacenter virtual machine. You can select a different operating system if you want.

From the Azure portal menu, select + Create a resource > Compute > Virtual machine, or search for Virtual machine in the portal search box.

Select Create.

On the Basics tab of Create a virtual machine, enter or select this information:

Setting	Value
Project Details	
Subscription	Select your subscription.
Resource Group	Select myResourceGroup.
Instance details	
Virtual machine name	Enter myVMNVA.
Region	Select (US) East US.
Availability Options	Select No infrastructure redundancy required.
Security type	Select Standard.
Image	Select Windows Server 2019 Datacenter - Gen2.
Azure Spot instance	Select No.
Size	Choose VM size or take default setting.
Administrator account	
Username	Enter a username.
Password	Enter a password. The password must be at least 12 characters long and meet the defined complexity requirements.
Confirm password	Reenter password.
Inbound port rules	
Public inbound ports	Select None.
Select the Networking tab, or select Next: Disks, then Next: Networking.

In the Networking tab, select or enter:

Setting	Value
Network interface	
Virtual network	Select myVirtualNetwork.
Subnet	Select DMZ
Public IP	Select None
NIC network security group	Select Basic
Public inbound ports network	Select None.
Select the Review + create tab, or select Review + create button at the bottom of the page.

Review the settings, and then select Create.

Create public and private virtual machines
You'll create two virtual machines in myVirtualNetwork virtual network, then you'll allow Internet Control Message Protocol (ICMP) on them so you can use tracert tool to trace traffic.

 Note

For production environments, we don't recommend allowing ICMP through the Windows Firewall.

Create public virtual machine
From the Azure portal menu, select Create a resource > Compute > Virtual machine.

In Create a virtual machine, enter or select this information in the Basics tab:

Setting	Value
Project Details	
Subscription	Select your subscription.
Resource Group	Select myResourceGroup.
Instance details	
Virtual machine name	Enter myVMPublic.
Region	Select (US) East US.
Availability Options	Select No infrastructure redundancy required.
Security type	Select Standard.
Image	Select Windows Server 2019 Datacenter - Gen2.
Azure Spot instance	Select No.
Size	Choose VM size or take default setting.
Administrator account	
Username	Enter a username.
Password	Enter a password. The password must be at least 12 characters long and meet the defined complexity requirements.
Confirm password	Reenter password.
Inbound port rules	
Public inbound ports	Select None.
Select the Networking tab, or select Next: Disks, then Next: Networking.

In the Networking tab, select or enter:

Setting	Value
Network interface	
Virtual network	Select myVirtualNetwork.
Subnet	Select Public.
Public IP	Select None.
NIC network security group	Select Basic.
Public inbound ports network	Select None.
Select the Review + create tab, or select the blue Review + create button at the bottom of the page.

Review the settings, and then select Create.

Create private virtual machine
From the Azure portal menu, select Create a resource > Compute > Virtual machine.

In Create a virtual machine, enter or select this information in the Basics tab:

Setting	Value
Project Details	
Subscription	Select your subscription.
Resource Group	Select myResourceGroup.
Instance details	
Virtual machine name	Enter myVMPrivate.
Region	Select (US) East US.
Availability Options	Select No infrastructure redundancy required.
Security type	Select Standard.
Image	Select Windows Server 2019 Datacenter - Gen2.
Azure Spot instance	Select No.
Size	Choose VM size or take default setting.
Administrator account	
Username	Enter a username.
Password	Enter a password. The password must be at least 12 characters long and meet the defined complexity requirements.
Confirm password	Reenter password.
Inbound port rules	
Public inbound ports	Select None.
Select the Networking tab, or select Next: Disks, then Next: Networking.

In the Networking tab, select or enter:

Setting	Value
Network interface	
Virtual network	Select myVirtualNetwork.
Subnet	Select Private.
Public IP	Select None.
NIC network security group	Select Basic.
Public inbound ports network	Select None.
Select the Review + create tab, or select the blue Review + create button at the bottom of the page.

Review the settings, and then select Create.

Allow ICMP in Windows firewall
Select Go to resource or Search for myVMPrivate in the portal search box.

In the Overview page of myVMPrivate, select Connect then Bastion.

Enter the username and password you created for myVMPrivate virtual machine previously.

Select Connect button.

Open Windows PowerShell after you connect.

Enter this command:

PowerShell

Copy
New-NetFirewallRule –DisplayName "Allow ICMPv4-In" –Protocol ICMPv4
From PowerShell, open a remote desktop connection to the myVMPublic virtual machine:

PowerShell

Copy
mstsc /v:myvmpublic
After you connect to myVMPublic VM, open Windows PowerShell and enter the same command from step 6.

Close the remote desktop connection to myVMPublic VM.

Turn on IP forwarding
To route traffic through the NVA, turn on IP forwarding in Azure and in the operating system of myVMNVA virtual machine. Once IP forwarding is enabled, any traffic received by myVMNVA VM that's destined for a different IP address, won't be dropped and will be forwarded to the correct destination.

Turn on IP forwarding in Azure
In this section, you'll turn on IP forwarding for the network interface of myVMNVA virtual machine in Azure.

Search for myVMNVA in the portal search box.

In the myVMNVA overview page, select Networking from the Settings section.

In the Networking page of myVMNVA, select the network interface next to Network Interface:. The name of the interface will begin with myvmnva.

Screenshot showing Networking page of network virtual appliance virtual machine in Azure portal.

In the network interface overview page, select IP configurations from the Settings section.

In the IP configurations page, set IP forwarding to Enabled, then select Save.

Screenshot showing Enabled I P forwarding in Azure portal.

Turn on IP forwarding in the operating system
In this section, you'll turn on IP forwarding for the operating system of myVMNVA virtual machine to forward network traffic. You'll use the same bastion connection to myVMPrivate VM, that you started in the previous steps, to open a remote desktop connection to myVMNVA VM.

From PowerShell on myVMPrivate VM, open a remote desktop connection to the myVMNVA VM:

PowerShell

Copy
mstsc /v:myvmnva
After you connect to myVMNVA VM, open Windows PowerShell and enter this command to turn on IP forwarding:

PowerShell

Copy
Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters -Name IpEnableRouter -Value 1
Restart myVMNVA VM.

PowerShell

Copy
Restart-Computer
Create a route table
In this section, you'll create a route table.

From the Azure portal menu, select + Create a resource > Networking > Route table, or search for Route table in the portal search box.

Select Create.

On the Basics tab of Create route table, enter or select this information:

Setting	Value
Project details	
Subscription	Select your subscription.
Resource group	Select myResourceGroup.
Instance details	
Region	Select East US.
Name	Enter myRouteTablePublic.
Propagate gateway routes	Select Yes.
Screenshot showing Basics tab of Create route table in Azure portal.

Select the Review + create tab, or select the blue Review + create button at the bottom of the page.

Create a route
In this section, you'll create a route in the route table that you created in the previous steps.

Select Go to resource or Search for myRouteTablePublic in the portal search box.

In the myRouteTablePublic page, select Routes from the Settings section.

In the Routes page, select the + Add button.

In Add route, enter or select this information:

Setting	Value
Route name	Enter ToPrivateSubnet.
Address prefix destination	Select IP Addresses.
Destination IP addresses/CIDR ranges	Enter 10.0.1.0/24 (The address range of the Private subnet created earlier).
Next hop type	Select Virtual appliance.
Next hop address	Enter 10.0.2.4 (The address of myVMNVA VM created earlier in the DMZ subnet).
Screenshot showing Add route configuration in Azure portal.

Select Add.

Associate a route table to a subnet
In this section, you'll associate the route table that you created in the previous steps to a subnet.

Search for myVirtualNetwork in the portal search box.

In the myVirtualNetwork page, select Subnets from the Settings section.

In the virtual network's subnet list, select Public.

In Route table, select myRouteTablePublic that you created in the previous steps.

Select Save to associate your route table to the Public subnet.

Screenshot showing Associate route table to the Public subnet in the virtual network in Azure portal.

Test the routing of network traffic
You'll test routing of network traffic using tracert tool from myVMPublic VM to myVMPrivate VM, and then you'll test the routing in the opposite direction.

Test network traffic from myVMPublic VM to myVMPrivate VM
From PowerShell on myVMPrivate VM, open a remote desktop connection to the myVMPublic VM:

PowerShell

Copy
mstsc /v:myvmpublic
After you connect to myVMPublic VM, open Windows PowerShell and enter this tracert command to trace the routing of network traffic from myVMPublic VM to myVMPrivate VM:

PowerShell

Copy
tracert myvmprivate
The response is similar to this example:

PowerShell

Copy
Tracing route to myvmprivate.q04q2hv50taerlrtdyjz5nza1f.bx.internal.cloudapp.net [10.0.1.4]
over a maximum of 30 hops:

  1     1 ms     *        2 ms  myvmnva.internal.cloudapp.net [10.0.2.4]
  2     2 ms     1 ms     1 ms  myvmprivate.internal.cloudapp.net [10.0.1.4]

Trace complete.
You can see that there are two hops in the above response for tracert ICMP traffic from myVMPublic VM to myVMPrivate VM. The first hop is myVMNVA VM, and the second hop is the destination myVMPrivate VM.

Azure sent the traffic from Public subnet through the NVA and not directly to Private subnet because you previously added ToPrivateSubnet route to myRouteTablePublic route table and associated it to Public subnet.

Close the remote desktop connection to myVMPublic VM.

Test network traffic from myVMPrivate VM to myVMPublic VM
From PowerShell on myVMPrivate VM, and enter this tracert command to trace the routing of network traffic from myVmPrivate VM to myVmPublic VM.

PowerShell

Copy
tracert myvmpublic
The response is similar to this example:

PowerShell

Copy
Tracing route to myvmpublic.q04q2hv50taerlrtdyjz5nza1f.bx.internal.cloudapp.net [10.0.0.4]
over a maximum of 30 hops:

  1     1 ms     1 ms     1 ms  myvmpublic.internal.cloudapp.net [10.0.0.4]

Trace complete.
You can see that there's one hop in the above response, which is the destination myVMPublic virtual machine.

Azure sent the traffic directly from Private subnet to Public subnet. By default, Azure routes traffic directly between subnets.

Close the bastion session.

Clean up resources
When the resource group is no longer needed, delete myResourceGroup and all the resources it contains:

Enter myResourceGroup in the Search box at the top of the Azure portal. When you see myResourceGroup in the search results, select it.

Select Delete resource group.

Enter myResourceGroup for TYPE THE RESOURCE GROUP NAME: and select Delete.

--------------------------x----------------------x------------------